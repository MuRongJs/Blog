{"version":3,"sources":["webpack:///./node_modules/_@sentry_types@5.2.0@@sentry/types/esm/severity.js","webpack:///./node_modules/_@sentry_types@5.2.0@@sentry/types/esm/status.js","webpack:///./node_modules/_@sentry_minimal@5.3.0@@sentry/minimal/esm/index.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/string.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/error.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/dsn.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/api.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/integration.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/baseclient.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/transports/noop.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/basebackend.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/supports.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/tracekit.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/parsers.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/transports/base.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/backend.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/version.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/client.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/helpers.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/sdk.js","webpack:///./node_modules/_@sentry_core@5.3.0@@sentry/core/esm/sdk.js","webpack:///./node_modules/_@sentry_browser@5.3.0@@sentry/browser/esm/index.js","webpack:///./node_modules/_tslib@1.9.3@tslib/tslib.es6.js","webpack:///./node_modules/_@sentry_hub@5.3.0@@sentry/hub/esm/hub.js","webpack:///./node_modules/_@sentry_hub@5.3.0@@sentry/hub/esm/scope.js","webpack:///./node_modules/_@sentry_hub@5.3.0@@sentry/hub/esm/span.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/is.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/misc.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/memo.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/syncpromise.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/object.js","webpack:///./node_modules/_@sentry_utils@5.3.0@@sentry/utils/esm/logger.js"],"names":["Severity","Status","fromString","level","Debug","Info","Warning","Error","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","callOnHub","method","args","_i","arguments","length","hub","Object","esm_hub","apply","tslib_es6","captureException","exception","syntheticException","originalException","captureMessage","message","captureEvent","event","addBreadcrumb","breadcrumb","configureScope","callback","withScope","originalFunctionToString","FunctionToString","this","name","id","prototype","setupOnce","Function","toString","context","__sentry__","__sentry_original__","truncate","str","max","substr","safeJoin","input","delimiter","Array","isArray","output","i","value","push","String","e","join","keysToEventMessage","keys","maxLength","includedKeys","serialized","slice","isMatchingPattern","pattern","is","test","includes","DEFAULT_IGNORE_ERRORS","inboundfilters_InboundFilters","InboundFilters","_options","esm_scope","self","getIntegration","client","getClient","clientOptions","getOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","logger","warn","misc","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","values","type","_oO","ignoreErrors","_getPossibleEventMessages","some","blacklistUrls","url","whitelistUrls","_a","oO","error","stacktrace","frames_1","frames","filename","frames_2","error_SentryError","_super","SentryError","_newTarget","constructor","_this","call","setPrototypeOf","DSN_REGEX","dsn_Dsn","Dsn","from","_fromString","_fromComponents","_validate","withPassword","host","path","pass","port","projectId","protocol","user","match","exec","_b","_c","split","pop","assign","components","forEach","component","Number","isNaN","parseInt","api_API","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","object","getRequestHeaders","clientName","clientVersion","header","Date","getTime","Content-Type","X-Sentry-Auth","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","key","encodeURIComponent","email","installedIntegrations","setupIntegrations","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","map","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","getIntegrationsToSetup","integration","log","setupIntegration","baseclient_BaseClient","BaseClient","backendClass","_processing","_backend","_dsn","_integrations","hint","scope","eventId","event_id","_getBackend","eventFromException","then","_processEvent","finalEvent","catch","reason","eventFromMessage","flush","timeout","_isClientProcessing","clientReady","_processingInterval","clearInterval","getTransport","close","transportFlushed","result","enabled","getIntegrations","Promise","resolve","ticked","setInterval","_isEnabled","undefined","_prepareEvent","environment","release","dist","maxValueLength","prepared","request","_addIntegrations","sdk","syncpromise","applyToEvent","sdkInfo","integrationsArray","beforeSend","sampleRate","Math","random","reject","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","noop_NoopTransport","NoopTransport","_","status","Skipped","basebackend_BaseBackend","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","_level","supportsFetch","Headers","Request","Response","supportsReferrerPolicy","referrerPolicy","tracekit_window","TraceKit","_report","_collectWindowErrors","_computeStackTrace","_linesOfContext","UNKNOWN_FUNCTION","ERROR_TYPES_RE","_has","hasOwnProperty","getLocationHref","document","location","href","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastException","lastExceptionStack","_notifyHandlers","stack","isWindowError","inner","_traceKitWindowOnError","lineNo","columnNo","errorObj","_augmentStackTraceWithInitialElement","processLastException","mechanism","line","column","msg","groups","func","mode","_traceKitWindowOnUnhandledRejection","err","detail","JSON","stringify","_lastExceptionStack","_lastException","ex","setTimeout","incomplete","_subscribe","handler","_installGlobalHandler","onerror","_installGlobalUnhandledRejectionHandler","onunhandledrejection","_computeStackTraceFromStackProp","submatch","parts","element","chrome","gecko","winjs","geckoEval","chromeEval","lines","reference","j","isNative","columnNumber","stackInfo","initial","unshift","partial","_computeStackTraceByWalkingCallerChain","depth","item","functionName","funcs","recursion","curr","caller","substring","splice","sourceURL","fileName","lineNumber","description","computeStackTrace","opera10Regex","opera11Regex","_computeStackTraceFromStacktraceProp","lineRE1","lineRE2","lineRE3","scripts","getElementsByTagName","inlineScriptBlocks","s","src","replace","_computeStackTraceFromOperaMultiLineMessage","original","tracekit_subscribe","tracekit_installGlobalHandler","tracekit_installGlobalUnhandledRejectionHandler","STACKTRACE_LIMIT","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","reverse","promisebuffer_PromiseBuffer","PromiseBuffer","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","all","clearTimeout","base_BaseTransport","BaseTransport","fetch_global","fetch_FetchTransport","FetchTransport","defaultOptions","body","fetch","response","xhr_XHRTransport","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","open","send","backend_BrowserBackend","BrowserBackend","transportOptions","transport","_buildEvent","domException","name_1","message_1","messageEvent","exceptionKeys","sort","extra","__serialized__","eventFromPlainObject","handled","synthetic","stringException","attachStacktrace","SDK_NAME","client_BrowserClient","BrowserClient","platform","packages","version","showReportDialog","script","createElement","async","onLoad","onload","head","appendChild","keypressTimeout","lastCapturedEvent","debounceDuration","ignoreOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","addEventProcessor","property","defineProperty","enumerable","defineProperties","get","debounceTimer","breadcrumbEventHandler","eventName","debounce","captureBreadcrumb","target","_htmlTreeAsString","category","keypressEventHandler","tagName","isContentEditable","elem","nextStr","currentElem","out","height","len","sepLength","_htmlElementAsString","parentNode","className","classes","attr","toLowerCase","attrWhitelist","getAttribute","trycatch_TryCatch","TryCatch","_ignoreOnError","_wrapTimeFunction","originalCallback","getFunctionName","_wrapRAF","_wrapEventTarget","global","proto","bind","lastHref","breadcrumbs_global","breadcrumbs_Breadcrumbs","Breadcrumbs","console","dom","history","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","originalFetch","fetchInput","filterUrl","addSentryBreadcrumb","fetchData","status_code","_instrumentHistory","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","relative","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","prop","wrapProp","serializedData","event_1","parse","globalhandlers_GlobalHandlers","GlobalHandlers","stackTraceLimit","_eventFromGlobalHandler","fallbackValue","fallbackType","DEFAULT_KEY","DEFAULT_LIMIT","linkederrors_LinkedErrors","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","useragent_global","useragent_UserAgent","UserAgent","navigator","headers","userAgent","sdk_defaultIntegrations","integrations_namespaceObject","init","clientClass","debug","enable","bindClient","initAndBind","lastEventId","forceLoad","sdk_close","sdk_wrap","__webpack_require__","d","__webpack_exports__","INTEGRATIONS","transports_namespaceObject","windowIntegrations","_window","Sentry","Integrations","esm_integrations_namespaceObject","__extends","__assign","__read","__spread","extendStatics","b","__proto__","p","__","create","t","n","o","m","Symbol","iterator","r","ar","next","done","concat","module","Hub","getCurrentHub","getHubFromCarrier","tslib__WEBPACK_IMPORTED_MODULE_0__","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","_scope__WEBPACK_IMPORTED_MODULE_3__","API_VERSION","_version","_stack","_invokeClient","top","getStackTop","isOlderThan","pushScope","getStack","parentScope","clone","popScope","getScope","_lastEventId","beforeBreadcrumb","maxBreadcrumbs","timestamp","mergedBreadcrumb","finalBreadcrumb","min","run","oldHub","makeMain","traceHeaders","span","getSpan","sentry-trace","toTraceparent","getMainCarrier","carrier","__SENTRY__","registry","setHubOnCarrier","hasHubOnCarrier","activeDomain","active","registryHubTopStack","_Oo","Scope","addGlobalEventProcessor","_sentry_utils__WEBPACK_IMPORTED_MODULE_3__","_sentry_utils__WEBPACK_IMPORTED_MODULE_4__","_span__WEBPACK_IMPORTED_MODULE_5__","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","_notifyScopeListeners","_notifyEventProcessors","processors","index","processor","final","setUser","setTags","tags","setTag","setExtras","setExtra","setFingerprint","fingerprint","_fingerprint","setLevel","setTransaction","transaction","_transaction","setContext","setSpan","_span","startSpan","newScope","clear","clearBreadcrumbs","_applyFingerprint","contexts","trace","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","Span","_sentry_utils__WEBPACK_IMPORTED_MODULE_0__","TRACEPARENT_REGEXP","_traceId","_spanId","_recorded","_parent","fromTraceparent","traceparent","matches","parent_1","toJSON","parent","span_id","trace_id","isError","wat","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isRegExp","isThenable","Boolean","isSyntheticEvent","process","dynamicRequire","mod","require","getGlobalObject","uuid4","parseUrl","getEventDescription","consoleSandbox","addExceptionTypeValue","fallbackGlobalObject","window","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","query","fragment","originalConsole","wrappedLevels","exports","originalModule","webpackPolyfill","children","l","Memo","_hasWeakSet","WeakSet","_inner","memoize","obj","has","unmemoize","delete","SyncPromise","States","_is__WEBPACK_IMPORTED_MODULE_0__","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_value","_executeHandlers","h","onFail","onSuccess","_attachHandler","onfulfilled","onrejected","val","fill","urlEncode","normalizeToSize","normalize","_memo__WEBPACK_IMPORTED_MODULE_1__","source","replacement","wrapped","jsonSize","encodeURI","utf8Length","maxSize","normalizeValue","_events","Event","getPrototypeOf","walk","memo","Infinity","normalized","serializeValue","objectifyError","acc","innerKey","_misc__WEBPACK_IMPORTED_MODULE_0__","PREFIX","Logger","_enabled","disable"],"mappings":"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","file":"10-f6980a21faa728688c29.js","sourcesContent":["/** JSDoc */\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nexport function captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\n//# sourceMappingURL=index.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { isRegExp } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line:prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/** Merges provided array of keys into */\nexport function keysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.includes(pattern);\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable:no-unsafe-any\n                var frames_1 = event.stacktrace.frames;\n                return frames_1[frames_1.length - 1].filename;\n            }\n            if (event.exception) {\n                // tslint:disable:no-unsafe-any\n                var frames_2 = event.exception.values[0].stacktrace.frames;\n                return frames_2[frames_2.length - 1].filename;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","import * as tslib_1 from \"tslib\";\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from '@sentry/utils';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        Object.assign(this, { host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && Number.isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { urlEncode } from '@sentry/utils';\nimport { Dsn } from './dsn';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { Dsn } from './dsn';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        this._integrations = setupIntegrations(this._options);\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (clientReady) {\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return clientReady && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            _this._processingInterval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve(true);\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve(false);\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result;\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint).then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                try {\n                    var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                    if (isInternalException || !beforeSend) {\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                        return;\n                    }\n                    var beforeSendResult = beforeSend(prepared, hint);\n                    if (typeof beforeSendResult === 'undefined') {\n                        logger.error('`beforeSend` method has to return `null` or a valid event.');\n                    }\n                    else if (isThenable(beforeSendResult)) {\n                        _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                    }\n                    else {\n                        finalEvent = beforeSendResult;\n                        if (finalEvent === null) {\n                            logger.log('`beforeSend` returned `null`, will not send event.');\n                            resolve(null);\n                            return;\n                        }\n                        // From here on we are really async\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                    }\n                }\n                catch (exception) {\n                    _this.captureException(exception, {\n                        data: {\n                            __sentry__: true,\n                        },\n                        originalException: exception,\n                    });\n                    reject('`beforeSend` throw an error, will not send event.');\n                }\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .catch(function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return Promise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return Promise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).catch(function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    return global.fetch.toString().indexOf('native') !== -1;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","// tslint:disable\nimport * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isError, isErrorEvent, normalize } from '@sentry/utils';\n/**\n * TraceKit - Cross brower stack traces\n *\n * This was originally forked from github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n *\n * NOTE: Last merge with upstream repository\n * Jul 11,2018 - #f03357c\n *\n * https://github.com/csnover/TraceKit\n * @license MIT\n * @namespace TraceKit\n */\nvar window = getGlobalObject();\nvar TraceKit = {\n    _report: false,\n    _collectWindowErrors: false,\n    _computeStackTrace: false,\n    _linesOfContext: false,\n};\n// var TraceKit: TraceKitInterface = {};\n// var TraceKit = {};\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `_has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\n * A safe form of location.href<br/>\n *\n * @return {string} location.href\n */\nfunction getLocationHref() {\n    if (typeof document === 'undefined' || document.location == null)\n        return '';\n    return document.location.href;\n}\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit._computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a TraceKit.StackTrace object as described in the\n * TraceKit._computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._report = (function reportModuleWrapper() {\n    var handlers = [], lastException = null, lastExceptionStack = null;\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     * @memberof TraceKit.report\n     */\n    function _subscribe(handler) {\n        // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\n        // So user can choose which one he wants to attach\n        // installGlobalHandler();\n        // installGlobalUnhandledRejectionHandler();\n        handlers.push(handler);\n    }\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {TraceKit.StackTrace} stack\n     * @param {boolean} isWindowError Is this a top-level window error?\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\n     * @memberof TraceKit.report\n     * @throws An exception if an error occurs while calling an handler.\n     */\n    function _notifyHandlers(stack, isWindowError, error) {\n        var exception = null;\n        if (isWindowError && !TraceKit._collectWindowErrors) {\n            return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i](stack, isWindowError, error);\n                }\n                catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n        if (exception) {\n            throw exception;\n        }\n    }\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error occurred.\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\n     * @param {Error=} errorObj The actual Error object.\n     * @memberof TraceKit.report\n     */\n    function _traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n        // If 'errorObj' is ErrorEvent, get real Error from inside\n        errorObj = isErrorEvent(errorObj) ? errorObj.error : errorObj;\n        // If 'message' is ErrorEvent, get real message from inside\n        message = isErrorEvent(message) ? message.message : message;\n        if (lastExceptionStack) {\n            TraceKit._computeStackTrace._augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        }\n        else if (errorObj && isError(errorObj)) {\n            stack = TraceKit._computeStackTrace(errorObj);\n            stack.mechanism = 'onerror';\n            _notifyHandlers(stack, true, errorObj);\n        }\n        else {\n            var location = {\n                url: url,\n                line: lineNo,\n                column: columnNo,\n            };\n            var name;\n            var msg = message; // must be new var or will modify original `arguments`\n            if ({}.toString.call(message) === '[object String]') {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n            location.func = UNKNOWN_FUNCTION;\n            location.context = null;\n            stack = {\n                name: name,\n                message: msg,\n                mode: 'onerror',\n                mechanism: 'onerror',\n                stack: [\n                    tslib_1.__assign({}, location, { \n                        // Firefox sometimes doesn't return url correctly and this is an old behavior\n                        // that I prefer to port here as well.\n                        // It can be altered only here, as previously it's using `location.url` for other things — Kamil\n                        url: location.url || getLocationHref() }),\n                ],\n            };\n            _notifyHandlers(stack, true, null);\n        }\n        if (_oldOnerrorHandler) {\n            // @ts-ignore\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n        return false;\n    }\n    /**\n     * Ensures all unhandled rejections are recorded.\n     * @param {PromiseRejectionEvent} e event.\n     * @memberof TraceKit.report\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n     */\n    function _traceKitWindowOnUnhandledRejection(e) {\n        var err = (e && (e.detail ? e.detail.reason : e.reason)) || e;\n        var stack = TraceKit._computeStackTrace(err);\n        stack.mechanism = 'onunhandledrejection';\n        if (!stack.message) {\n            stack.message = JSON.stringify(normalize(err));\n        }\n        _notifyHandlers(stack, true, err);\n    }\n    /**\n     * Install a global onerror handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalHandler() {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = _traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n    /**\n     * Install a global onunhandledrejection handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalUnhandledRejectionHandler() {\n        window.onunhandledrejection = _traceKitWindowOnUnhandledRejection;\n    }\n    /**\n     * Process the most recent exception\n     * @memberof TraceKit.report\n     */\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack, _lastException = lastException;\n        lastExceptionStack = null;\n        lastException = null;\n        _notifyHandlers(_lastExceptionStack, false, _lastException);\n    }\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @memberof TraceKit.report\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n     */\n    function _report(ex) {\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            }\n            else {\n                processLastException();\n            }\n        }\n        var stack = TraceKit._computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, stack.incomplete ? 2000 : 0);\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n    _report._subscribe = _subscribe;\n    _report._installGlobalHandler = _installGlobalHandler;\n    _report._installGlobalUnhandledRejectionHandler = _installGlobalUnhandledRejectionHandler;\n    return _report;\n})();\n/**\n * An object representing a single stack frame.\n * @typedef {Object} StackFrame\n * @property {string} url The JavaScript or HTML file URL.\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * @property {string[]?} args The arguments passed to the function, if known.\n * @property {number=} line The line number, if known.\n * @property {number=} column The column number, if known.\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n * @memberof TraceKit\n */\n/**\n * An object representing a JavaScript stack trace.\n * @typedef {Object} StackTrace\n * @property {string} name The name of the thrown exception.\n * @property {string} message The exception error message.\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\n * @memberof TraceKit\n */\n/**\n * TraceKit._computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   ```js\n *   s = TraceKit._computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n *   ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit._computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit._computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._computeStackTrace = (function _computeStackTraceWrapper() {\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStackProp(ex) {\n        if (!ex || !ex.stack) {\n            return null;\n        }\n        // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n        var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i, \n        // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n        // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n        // We need this specific case for now because we want no other regex to match.\n        gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i, winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i, \n        // Used to additionally parse URL/line/column from eval frames\n        isEval, geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i, chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/, lines = ex.stack.split('\\n'), stack = [], submatch, parts, element, reference = /^(.*) is undefined$/.exec(ex.message);\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n                isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n                if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                    // throw out eval line/column and use top-most line/column number\n                    parts[2] = submatch[1]; // url\n                    parts[3] = submatch[2]; // line\n                    parts[4] = submatch[3]; // column\n                }\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: isNative ? [parts[2]] : [],\n                    line: parts[3] ? +parts[3] : null,\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = winjs.exec(lines[i]))) {\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: [],\n                    line: +parts[3],\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = gecko.exec(lines[i]))) {\n                isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n                if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                    // throw out eval line/column and use top-most line number\n                    parts[1] = parts[1] || \"eval\";\n                    parts[3] = submatch[1];\n                    parts[4] = submatch[2];\n                    parts[5] = ''; // no column when eval\n                }\n                else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                    // FireFox uses this awesome columnNumber property for its top frame\n                    // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                    // so adding 1\n                    // NOTE: this hack doesn't work if top-most frame is eval\n                    stack[0].column = ex.columnNumber + 1;\n                }\n                element = {\n                    url: parts[3],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: parts[2] ? parts[2].split(',') : [],\n                    line: parts[4] ? +parts[4] : null,\n                    column: parts[5] ? +parts[5] : null,\n                };\n            }\n            else {\n                continue;\n            }\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            element.context = null;\n            stack.push(element);\n        }\n        if (!stack.length) {\n            return null;\n        }\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = null;\n        }\n        return {\n            mode: 'stack',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10+ uses this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (!stacktrace) {\n            return;\n        }\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i, opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i, lines = stacktrace.split('\\n'), stack = [], parts;\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[2],\n                    line: +parts[1],\n                    column: null,\n                    func: parts[3],\n                    args: [],\n                };\n            }\n            else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[6],\n                    line: +parts[1],\n                    column: +parts[2],\n                    func: parts[3] || parts[4],\n                    args: parts[5] ? parts[5].split(',') : [],\n                };\n            }\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = UNKNOWN_FUNCTION;\n                }\n                if (element.line) {\n                    element.context = null;\n                }\n                if (!element.context) {\n                    element.context = [lines[line + 1]];\n                }\n                stack.push(element);\n            }\n        }\n        if (!stack.length) {\n            return null;\n        }\n        return {\n            mode: 'stacktrace',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromOperaMultiLineMessage(ex) {\n        // TODO: Clean this function up\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i, stack = [], scripts = window && window.document && window.document.getElementsByTagName('script'), inlineScriptBlocks = [], parts;\n        for (var s in scripts) {\n            if (_has(scripts, s) && !scripts[s].src) {\n                inlineScriptBlocks.push(scripts[s]);\n            }\n        }\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    url: parts[2],\n                    func: parts[3],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    url: parts[3],\n                    func: parts[4],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = getLocationHref().replace(/#.*$/, '');\n                item = {\n                    url: url,\n                    func: '',\n                    args: [],\n                    line: parts[1],\n                    column: null,\n                };\n            }\n            if (item) {\n                if (!item.func) {\n                    item.func = UNKNOWN_FUNCTION;\n                }\n                // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                item.context = [lines[line + 1]];\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n        return {\n            mode: 'multiline',\n            name: ex.name,\n            message: lines[0],\n            stack: stack,\n        };\n    }\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            url: url,\n            line: lineNo,\n        };\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n            if (!initial.func) {\n                initial.func = UNKNOWN_FUNCTION;\n            }\n            if (!initial.context) {\n                initial.context = null;\n            }\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = null;\n            }\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    }\n                    else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        }\n        else {\n            stackInfo.incomplete = true;\n        }\n        return false;\n    }\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {TraceKit.StackTrace=} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i, stack = [], funcs = {}, recursion = false, parts, item;\n        for (var curr = _computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === _computeStackTrace || curr === TraceKit._report) {\n                continue;\n            }\n            item = {\n                url: null,\n                func: UNKNOWN_FUNCTION,\n                args: [],\n                line: null,\n                column: null,\n            };\n            if (curr.name) {\n                item.func = curr.name;\n            }\n            else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n            if (typeof item.func === 'undefined') {\n                try {\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\n                }\n                catch (e) { }\n            }\n            if (funcs['' + curr]) {\n                recursion = true;\n            }\n            else {\n                funcs['' + curr] = true;\n            }\n            stack.push(item);\n        }\n        if (depth) {\n            stack.splice(0, depth);\n        }\n        var result = {\n            mode: 'callers',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n        _augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     * @memberof TraceKit._computeStackTrace\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = depth == null ? 0 : +depth;\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = _computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        return {\n            original: ex,\n            name: ex.name,\n            message: ex.message,\n            mode: 'failed',\n        };\n    }\n    computeStackTrace._augmentStackTraceWithInitialElement = _augmentStackTraceWithInitialElement;\n    computeStackTrace._computeStackTraceFromStackProp = _computeStackTraceFromStackProp;\n    return computeStackTrace;\n})();\nTraceKit._collectWindowErrors = true;\nTraceKit._linesOfContext = 11;\nvar _subscribe = TraceKit._report._subscribe;\nvar _installGlobalHandler = TraceKit._report._installGlobalHandler;\nvar _installGlobalUnhandledRejectionHandler = TraceKit._report._installGlobalUnhandledRejectionHandler;\nvar _computeStackTrace = TraceKit._computeStackTrace;\nexport { _subscribe, _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _computeStackTrace };\n//# sourceMappingURL=tracekit.js.map","import { keysToEventMessage, normalizeToSize } from '@sentry/utils';\nimport { _computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException) {\n    var exceptionKeys = Object.keys(exception).sort();\n    var event = {\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n        message: \"Non-Error exception captured with keys: \" + keysToEventMessage(exceptionKeys),\n    };\n    if (syntheticException) {\n        var stacktrace = _computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.includes('captureMessage') || firstFrameFunction.includes('captureException')) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.includes('sentryWrapped')) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { SentryError } from './error';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return Promise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .catch(function () {\n            return _this.remove(task).catch(function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            Promise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .catch(function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        return this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) { return ({\n            status: Status.fromHttpCode(response.status),\n        }); }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        return this._buffer.add(new Promise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                if (request.status === 200) {\n                    resolve({\n                        status: Status.fromHttpCode(request.status),\n                    });\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isPlainObject, supportsFetch, SyncPromise, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { _computeStackTrace } from './tracekit';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = this._options.transportOptions\n            ? this._options.transportOptions\n            : { dsn: this._options.dsn };\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var _this = this;\n        var event;\n        if (isErrorEvent(exception) && exception.error) {\n            // If it is an ErrorEvent with `error` property, extract it to get actual Error\n            var errorEvent = exception;\n            exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isDOMError(exception) || isDOMException(exception)) {\n            // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n            // then we just extract the name and message, as they don't provide anything else\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n            var domException = exception;\n            var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n            var message_1 = domException.message ? name_1 + \": \" + domException.message : name_1;\n            return this.eventFromMessage(message_1, Severity.Error, hint).then(function (messageEvent) {\n                addExceptionTypeValue(messageEvent, message_1);\n                return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n            });\n        }\n        if (isError(exception)) {\n            // we have a real Error object, do nothing\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isPlainObject(exception) && hint && hint.syntheticException) {\n            // If it is plain Object, serialize it manually and extract options\n            // This will allow us to group events based on top-level keys\n            // which is much better than creating new group when any key/value change\n            var objectException = exception;\n            event = eventFromPlainObject(objectException, hint.syntheticException);\n            addExceptionTypeValue(event, 'Custom Object', undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            event.level = Severity.Error;\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        // If none of previous checks were valid, then it means that\n        // it's not a DOMError/DOMException\n        // it's not a plain Object\n        // it's not a valid ErrorEvent (one with an error property)\n        // it's not an Error\n        // So bail out and capture it as a simple message:\n        var stringException = exception;\n        return this.eventFromMessage(stringException, undefined, hint).then(function (messageEvent) {\n            addExceptionTypeValue(messageEvent, \"\" + stringException, undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            messageEvent.level = Severity.Error;\n            return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n        });\n    };\n    /**\n     * This is an internal helper function that creates an event.\n     */\n    BrowserBackend.prototype._buildEvent = function (event, hint) {\n        return tslib_1.__assign({}, event, { event_id: hint && hint.event_id });\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var event = {\n            event_id: hint && hint.event_id,\n            level: level,\n            message: message,\n        };\n        if (this._options.attachStacktrace && hint && hint.syntheticException) {\n            var stacktrace = _computeStackTrace(hint.syntheticException);\n            var frames_1 = prepareFramesForEvent(stacktrace.stack);\n            event.stacktrace = {\n                frames: frames_1,\n            };\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.3.0';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionTypeValue, isString, normalize } from '@sentry/utils';\nvar debounceDuration = 1000;\nvar keypressTimeout;\nvar lastCapturedEvent;\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        // tslint:disable-next-line:strict-type-predicates\n        if (before && typeof before === 'function') {\n            before.apply(this, arguments);\n        }\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means Raven caught an error invoking your application code. This is\n            //       expected behavior and NOT indicative of a bug with Raven.js.\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: normalize(args, 3) });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        Object.defineProperty(sentryWrapped, 'name', {\n            get: function () {\n                return fn.name;\n            },\n        });\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\nvar debounceTimer = 0;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        var captureBreadcrumb = function () {\n            // try/catch both:\n            // - accessing event.target (see getsentry/raven-js#838, #768)\n            // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n            //   can throw an exception in some circumstances.\n            var target;\n            try {\n                target = event.target ? _htmlTreeAsString(event.target) : _htmlTreeAsString(event);\n            }\n            catch (e) {\n                target = '<unknown>';\n            }\n            if (target.length === 0) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: \"ui.\" + eventName,\n                message: target,\n            }, {\n                event: event,\n                name: eventName,\n            });\n        };\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(captureBreadcrumb);\n        }\n        else {\n            captureBreadcrumb();\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler() {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            breadcrumbEventHandler('input')(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = _htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                        mechanism: {\n                            data: {\n                                function: 'handleEvent',\n                                handler: getFunctionName(fn),\n                                target: target,\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n    try {\n        return (fn && fn.name) || '<anonymous>';\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return '<anonymous>';\n    }\n}\n//# sourceMappingURL=trycatch.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { fill, getEventDescription, getGlobalObject, isString, logger, normalize, parseUrl, safeJoin, supportsHistory, supportsNativeFetch, } from '@sentry/utils';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\nvar global = getGlobalObject();\nvar lastHref;\n/** Default Breadcrumbs instrumentations */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentConsole = function () {\n        if (!('console' in global)) {\n            return;\n        }\n        ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n            if (!(level in global.console)) {\n                return;\n            }\n            fill(global.console, level, function (originalConsoleLevel) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var breadcrumbData = {\n                        category: 'console',\n                        data: {\n                            extra: {\n                                arguments: normalize(args, 3),\n                            },\n                            logger: 'console',\n                        },\n                        level: Severity.fromString(level),\n                        message: safeJoin(args, ' '),\n                    };\n                    if (level === 'assert') {\n                        if (args[0] === false) {\n                            breadcrumbData.message = \"Assertion failed: \" + (safeJoin(args.slice(1), ' ') || 'console.assert');\n                            breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n                        }\n                    }\n                    Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                        input: args,\n                        level: level,\n                    });\n                    // this fails for some browsers. :(\n                    if (originalConsoleLevel) {\n                        Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                    }\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentDOM = function () {\n        if (!('document' in global)) {\n            return;\n        }\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n        global.document.addEventListener('keypress', keypressEventHandler(), false);\n        // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n        ['EventTarget', 'Node'].forEach(function (target) {\n            var proto = global[target] && global[target].prototype;\n            if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n                return;\n            }\n            fill(proto, 'addEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    if (fn && fn.handleEvent) {\n                        if (eventName === 'click') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    breadcrumbEventHandler('click')(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                        if (eventName === 'keypress') {\n                            fill(fn, 'handleEvent', keypressEventHandler());\n                        }\n                    }\n                    else {\n                        if (eventName === 'click') {\n                            breadcrumbEventHandler('click', true)(this);\n                        }\n                        if (eventName === 'keypress') {\n                            keypressEventHandler()(this);\n                        }\n                    }\n                    return original.call(this, eventName, fn, options);\n                };\n            });\n            fill(proto, 'removeEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    var callback = fn;\n                    try {\n                        callback = callback && (callback.__sentry_wrapped__ || callback);\n                    }\n                    catch (e) {\n                        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                    }\n                    return original.call(this, eventName, callback, options);\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentFetch = function () {\n        if (!supportsNativeFetch()) {\n            return;\n        }\n        fill(global, 'fetch', function (originalFetch) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var fetchInput = args[0];\n                var method = 'GET';\n                var url;\n                if (typeof fetchInput === 'string') {\n                    url = fetchInput;\n                }\n                else if ('Request' in global && fetchInput instanceof Request) {\n                    url = fetchInput.url;\n                    if (fetchInput.method) {\n                        method = fetchInput.method;\n                    }\n                }\n                else {\n                    url = String(fetchInput);\n                }\n                if (args[1] && args[1].method) {\n                    method = args[1].method;\n                }\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (filterUrl && url.includes(filterUrl)) {\n                        if (method === 'POST' && args[1] && args[1].body) {\n                            addSentryBreadcrumb(args[1].body);\n                        }\n                        return originalFetch.apply(global, args);\n                    }\n                }\n                var fetchData = {\n                    method: method,\n                    url: url,\n                };\n                return originalFetch\n                    .apply(global, args)\n                    .then(function (response) {\n                    fetchData.status_code = response.status;\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        type: 'http',\n                    }, {\n                        input: args,\n                        response: response,\n                    });\n                    return response;\n                })\n                    .catch(function (error) {\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        level: Severity.Error,\n                        type: 'http',\n                    }, {\n                        error: error,\n                        input: args,\n                    });\n                    throw error;\n                });\n            };\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentHistory = function () {\n        var _this = this;\n        if (!supportsHistory()) {\n            return;\n        }\n        var captureUrlChange = function (from, to) {\n            var parsedLoc = parseUrl(global.location.href);\n            var parsedTo = parseUrl(to);\n            var parsedFrom = parseUrl(from);\n            // Initial pushState doesn't provide `from` information\n            if (!parsedFrom.path) {\n                parsedFrom = parsedLoc;\n            }\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\n            // not the previous (from) value, we need to track the value of the current URL\n            // state ourselves\n            lastHref = to;\n            // Use only the path component of the URL if the URL matches the current\n            // document (almost all the time when using pushState)\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                to = parsedTo.relative;\n            }\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                from = parsedFrom.relative;\n            }\n            Breadcrumbs.addBreadcrumb({\n                category: 'navigation',\n                data: {\n                    from: from,\n                    to: to,\n                },\n            });\n        };\n        // record navigation (URL) changes\n        var oldOnPopState = global.onpopstate;\n        global.onpopstate = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var currentHref = global.location.href;\n            captureUrlChange(lastHref, currentHref);\n            if (oldOnPopState) {\n                return oldOnPopState.apply(_this, args);\n            }\n        };\n        /**\n         * @hidden\n         */\n        function historyReplacementFunction(originalHistoryFunction) {\n            // note history.pushState.length is 0; intentionally not declaring\n            // params to preserve 0 arity\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args.length > 2 ? args[2] : undefined;\n                // url argument is optional\n                if (url) {\n                    // coerce to string (this is what pushState does)\n                    captureUrlChange(lastHref, String(url));\n                }\n                return originalHistoryFunction.apply(this, args);\n            };\n        }\n        fill(global.history, 'pushState', historyReplacementFunction);\n        fill(global.history, 'replaceState', historyReplacementFunction);\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentXHR = function () {\n        if (!('XMLHttpRequest' in global)) {\n            return;\n        }\n        /**\n         * @hidden\n         */\n        function wrapProp(prop, xhr) {\n            // TODO: Fix XHR types\n            if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n                    return wrap(original, {\n                        mechanism: {\n                            data: {\n                                function: prop,\n                                handler: (original && original.name) || '<anonymous>',\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                });\n            }\n        }\n        var xhrproto = XMLHttpRequest.prototype;\n        fill(xhrproto, 'open', function (originalOpen) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args[1];\n                this.__sentry_xhr__ = {\n                    method: args[0],\n                    url: args[1],\n                };\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (isString(url) && (filterUrl && url.includes(filterUrl))) {\n                        this.__sentry_own_request__ = true;\n                    }\n                }\n                return originalOpen.apply(this, args);\n            };\n        });\n        fill(xhrproto, 'send', function (originalSend) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhr = this; // tslint:disable-line:no-this-assignment\n                if (xhr.__sentry_own_request__) {\n                    addSentryBreadcrumb(args[0]);\n                }\n                /**\n                 * @hidden\n                 */\n                function onreadystatechangeHandler() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.__sentry_own_request__) {\n                            return;\n                        }\n                        try {\n                            // touching statusCode in some platforms throws\n                            // an exception\n                            if (xhr.__sentry_xhr__) {\n                                xhr.__sentry_xhr__.status_code = xhr.status;\n                            }\n                        }\n                        catch (e) {\n                            /* do nothing */\n                        }\n                        Breadcrumbs.addBreadcrumb({\n                            category: 'xhr',\n                            data: xhr.__sentry_xhr__,\n                            type: 'http',\n                        }, {\n                            xhr: xhr,\n                        });\n                    }\n                }\n                ['onload', 'onerror', 'onprogress'].forEach(function (prop) {\n                    wrapProp(prop, xhr);\n                });\n                if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                    fill(xhr, 'onreadystatechange', function (original) {\n                        return wrap(original, {\n                            mechanism: {\n                                data: {\n                                    function: 'onreadystatechange',\n                                    handler: (original && original.name) || '<anonymous>',\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        }, onreadystatechangeHandler);\n                    });\n                }\n                else {\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\n                    // are free to set our own and capture the breadcrumb\n                    xhr.onreadystatechange = onreadystatechangeHandler;\n                }\n                return originalSend.apply(this, args);\n            };\n        });\n    };\n    /**\n     * Helper that checks if integration is enabled on the client.\n     * @param breadcrumb Breadcrumb\n     * @param hint BreadcrumbHint\n     */\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\n        if (getCurrentHub().getIntegration(Breadcrumbs)) {\n            getCurrentHub().addBreadcrumb(breadcrumb, hint);\n        }\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        if (this._options.console) {\n            this._instrumentConsole();\n        }\n        if (this._options.dom) {\n            this._instrumentDOM();\n        }\n        if (this._options.xhr) {\n            this._instrumentXHR();\n        }\n        if (this._options.fetch) {\n            this._instrumentFetch();\n        }\n        if (this._options.history) {\n            this._instrumentHistory();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        Breadcrumbs.addBreadcrumb({\n            category: 'sentry',\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { addExceptionTypeValue, isString, logger, normalize, truncate } from '@sentry/utils';\nimport { shouldIgnoreOnError } from '../helpers';\nimport { eventFromStacktrace } from '../parsers';\nimport { _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _subscribe, } from '../tracekit';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        _subscribe(function (stack, _, error) {\n            // TODO: use stack.context to get a valuable information from TraceKit, eg.\n            // [\n            //   0: \"  })\"\n            //   1: \"\"\n            //   2: \"  function foo () {\"\n            //   3: \"    Sentry.captureException('some error')\"\n            //   4: \"    Sentry.captureMessage('some message')\"\n            //   5: \"    throw 'foo'\"\n            //   6: \"  }\"\n            //   7: \"\"\n            //   8: \"  function bar () {\"\n            //   9: \"    foo();\"\n            //   10: \"  }\"\n            // ]\n            if (shouldIgnoreOnError()) {\n                return;\n            }\n            var self = getCurrentHub().getIntegration(GlobalHandlers);\n            if (self) {\n                getCurrentHub().captureEvent(self._eventFromGlobalHandler(stack), {\n                    data: { stack: stack },\n                    originalException: error,\n                });\n            }\n        });\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            _installGlobalHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            _installGlobalUnhandledRejectionHandler();\n        }\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace.\n     *\n     * @param stacktrace TraceKitStackTrace to be converted to an Event.\n     */\n    GlobalHandlers.prototype._eventFromGlobalHandler = function (stacktrace) {\n        if (!isString(stacktrace.message) && stacktrace.mechanism !== 'onunhandledrejection') {\n            // There are cases where stacktrace.message is an Event object\n            // https://github.com/getsentry/sentry-javascript/issues/1949\n            // In this specific case we try to extract stacktrace.message.error.message\n            var message = stacktrace.message;\n            stacktrace.message =\n                message.error && isString(message.error.message) ? message.error.message : 'No error message';\n        }\n        var event = eventFromStacktrace(stacktrace);\n        var data = {\n            mode: stacktrace.mode,\n        };\n        if (stacktrace.message) {\n            data.message = stacktrace.message;\n        }\n        if (stacktrace.name) {\n            data.name = stacktrace.name;\n        }\n        var client = getCurrentHub().getClient();\n        var maxValueLength = (client && client.getOptions().maxValueLength) || 250;\n        var fallbackValue = stacktrace.original\n            ? truncate(JSON.stringify(normalize(stacktrace.original)), maxValueLength)\n            : '';\n        var fallbackType = stacktrace.mechanism === 'onunhandledrejection' ? 'UnhandledRejection' : 'Error';\n        // This makes sure we have type/value in every exception\n        addExceptionTypeValue(event, fallbackValue, fallbackType, {\n            data: data,\n            handled: false,\n            type: stacktrace.mechanism,\n        });\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { _computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = _computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // HTTP Interface: https://docs.sentry.io/clientdev/interfaces/http/?platform=javascript\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n */\nexport function wrap(fn) {\n    // tslint:disable-next-line: no-unsafe-any\n    internalWrap(fn)();\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport { Severity, Status, } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, withScope, getHubFromCarrier, getCurrentHub, Hub, Scope, } from '@sentry/core';\nexport { BrowserClient } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            // TODO: freeze flag\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            var span = top.scope.getSpan();\n            if (span) {\n                return {\n                    'sentry-trace': span.toTraceparent(),\n                };\n            }\n        }\n        return {};\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\nimport { Span } from './span';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .catch(reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .catch(reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = normalize(user);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, normalize(tags));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = normalize(value), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extra) {\n        this._extra = tslib_1.__assign({}, this._extra, normalize(extra));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = normalize(extra), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = normalize(fingerprint);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = normalize(level);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (name, context) {\n        this._context[name] = context ? normalize(context) : undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.startSpan = function () {\n        var span = new Span();\n        this.setSpan(span);\n        return span;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        Object.assign(newScope, scope, {\n            _scopeListeners: [],\n        });\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        if (this._span) {\n            event.contexts = event.contexts || {};\n            event.contexts.trace = this._span;\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import { uuid4 } from '@sentry/utils';\nexport var TRACEPARENT_REGEXP = /([0-9a-f]{2})-([0-9a-f]{32})-([0-9a-f]{16})-([0-9a-f]{2})/;\n/**\n * Span containg all data about a span\n */\nvar Span = /** @class */ (function () {\n    function Span(_traceId, _spanId, _recorded, _parent) {\n        if (_traceId === void 0) { _traceId = uuid4(); }\n        if (_spanId === void 0) { _spanId = uuid4().substring(16); }\n        if (_recorded === void 0) { _recorded = false; }\n        this._traceId = _traceId;\n        this._spanId = _spanId;\n        this._recorded = _recorded;\n        this._parent = _parent;\n    }\n    /**\n     * Continues a trace\n     * @param traceparent Traceparent string\n     */\n    Span.fromTraceparent = function (traceparent) {\n        var matches = traceparent.match(TRACEPARENT_REGEXP);\n        if (matches) {\n            var parent_1 = new Span(matches[2], matches[3], matches[4] === '01' ? true : false);\n            return new Span(matches[2], undefined, undefined, parent_1);\n        }\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        return \"00-\" + this._traceId + \"-\" + this._spanId + \"-\" + (this._recorded ? '01' : '00');\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return {\n            parent: (this._parent && this._parent.toJSON()) || undefined,\n            span_id: this._spanId,\n            trace_id: this._traceId,\n        };\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=span.js.map","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // tslint:disable:no-unsafe-any\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n    // tslint:enable:no-unsafe-any\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    // tslint:disable-next-line:no-unsafe-any\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n//# sourceMappingURL=is.js.map","/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod, request) {\n    // tslint:disable-next-line: no-unsafe-any\n    return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // tslint:disable-next-line:no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // tslint:disable-next-line:no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @param mechanism Mechanism of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type, mechanism) {\n    if (mechanism === void 0) { mechanism = {\n        handled: true,\n        type: 'generic',\n    }; }\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n    event.exception.values[0].mechanism = event.exception.values[0].mechanism || mechanism;\n}\n//# sourceMappingURL=misc.js.map","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        // tslint:disable-next-line\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","import { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/** JSDoc */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(callback) {\n        var _this = this;\n        /** JSDoc */\n        this._state = States.PENDING;\n        /** JSDoc */\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(value, States.RESOLVED);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(reason, States.REJECTED);\n        };\n        /** JSDoc */\n        this._setResult = function (value, state) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._value = value;\n            _this._state = state;\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            if (_this._state === States.REJECTED) {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onFail && h.onFail(_this._value); });\n            }\n            else {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onSuccess && h.onSuccess(_this._value); });\n            }\n            _this._handlers = [];\n            return;\n        };\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        try {\n            callback(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        // public then<U>(onSuccess?: HandlerOnSuccess<T, U>, onFail?: HandlerOnFail<U>): SyncPromise<T | U> {\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                onFail: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onSuccess: function (result) {\n                    if (!onfulfilled) {\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onFail) {\n        // tslint:disable-next-line:no-unsafe-any\n        return this.then(function (val) { return val; }, onFail);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return \"[object SyncPromise]\";\n    };\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import { isError, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source, name, replacement) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry__: {\n                    enumerable: false,\n                    value: true,\n                },\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n                __sentry_wrapped__: {\n                    enumerable: false,\n                    value: wrapped,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof Event !== 'undefined' && value instanceof Event) {\n        return Object.getPrototypeOf(value) ? value.constructor.name : 'Event';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    if (Number.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    // If value implements `toJSON` method, call it and return early\n    // tslint:disable:no-unsafe-any\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    // tslint:enable:no-unsafe-any\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = (isError(value) ? objectifyError(value) : value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input, depth) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n//# sourceMappingURL=object.js.map","import { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map"],"sourceRoot":""}