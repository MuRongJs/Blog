{"version":3,"sources":["webpack:///./src/api/index.js","webpack:///./src/components/Content/index.js","webpack:///./src/components/JueJin/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/api/images.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/ShareBox/index.js"],"names":["isBrowser","config","maxPostsInPage","window","parseChineseDate","date","dayjs","format","Content","props","_this","post","_Component","call","this","componentDidMount","lozad","load","el","src","dataset","onload","classList","add","observe","render","_react_16_8_6_react_default","a","createElement","dangerouslySetInnerHTML","__html","style","padding","background","Component","propTypes","PropTypes","string","isRequired","JueJin","_ref","jueJinPostLink","jueJinLikeIconLink","href","rel","alt","cursor","height","marginBottom","defaultProps","Header","img","title","subTitle","authorImage","authorName","className","id","backgroundImage","marginTop","parseImgur","components_JueJin","name","iconUrl","bgWhite","gitalk","BlogPost","require","data","_this$data$content$ed","content","edges","node","frontmatter","html","fields","excerpt","slug","headerImage","src_components_Header","Sidebar","components_Content","ExternalLink","ShareBox","url","SEO","siteTitleAlt","isPost","description","image","pageQuery","friends","Friend","map","friend","key","LatestPost","posts","_ref2","gatsby_browser_entry","to","arrayOf","object","Information","totalCount","components_Sidebar_LatestPost","components_Sidebar_Friend","number","array","wordings","githubUsername","zhihuUsername","email","about","Icon","icon","target","index_es","latestPosts","Sidebar_Icon","components_Sidebar_Information","__webpack_exports__","query","Sidebar_Sidebar","Object","assign","all","limited","_1307080370","rawImage","size","match","resizedImage","replace","small-square","big-square","small","medium","large","huge","parseImageTag","text","parseTitle","module","exports","getGalleryImage","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_data__WEBPACK_IMPORTED_MODULE_3__","_data__WEBPACK_IMPORTED_MODULE_3___default","type","JSON","stringify","@context","@type","alternateName","itemListElement","position","item","@id","headline","schemaOrgJSONLD","property","siteFBAppID","twitter_username","bool","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_ga__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","hasCommentBox","onClick","ReactGA","event","category","action","lineHeight","paddingLeft"],"mappings":"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","file":"component---src-templates-blog-post-js-3fcd1ae670ae22763fc9.js","sourcesContent":["import dayjs from 'dayjs';\r\nimport { config } from '../../data';\r\n\r\nconst { maxPostsInPage } = config;\r\n\r\n// Prevent webpack window problem\r\nconst isBrowser = () => typeof window !== 'undefined';\r\n\r\nconst getPageNumber = () => (isBrowser() ? +window.location.pathname.match(/page[/](\\d)/)[1] : -1);\r\n\r\nconst getCurrentPage = () => {\r\n  if (isBrowser() === true) {\r\n    const str = window.location.pathname;\r\n    if (str.indexOf('page') !== -1) {\r\n      // Return the last pathname in number\r\n      return getPageNumber();\r\n    }\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst getPath = () => (isBrowser() ? window.location.pathname : '');\r\n\r\nconst getMaxPages = amount => Math.ceil(amount / maxPostsInPage);\r\n\r\n// Array.fill() is added by trial and error\r\nconst getPages = amount => new Array(amount).fill().map((_, index) => `/page/${index + 1}`);\r\n\r\nconst overflow = () => getCurrentPage() === getMaxPages();\r\n\r\nconst parseDate = date => dayjs(date).format('YYYY/MM/DD');\r\n\r\nconst parseChineseDate = date => dayjs(date).format('DD/MM/YYYY');\r\n\r\nexport {\r\n  isBrowser,\r\n  getCurrentPage,\r\n  getMaxPages,\r\n  getPages,\r\n  overflow,\r\n  parseDate,\r\n  parseChineseDate,\r\n  getPath,\r\n  getPageNumber,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport lozad from 'lozad';\r\n\r\nimport { isBrowser } from '../../api';\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { post } = this.props;\r\n    this.post = post;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // lazy loads elements with default selector as '.lozad'\r\n    // Prevent WebPack build fail\r\n    if (isBrowser()) {\r\n      // Initialize library\r\n      const observer = lozad('.lozad', {\r\n        load(el) {\r\n          /* eslint-disable no-param-reassign */\r\n\r\n          el.src = el.dataset.src;\r\n          el.onload = () => {\r\n            el.classList.add('animated');\r\n            el.classList.add('fadeIn');\r\n          };\r\n          /* eslint-enable */\r\n        },\r\n      });\r\n      observer.observe();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { post } = this.props;\r\n    return (\r\n      <div\r\n        // eslint-disable-next-line react/no-danger\r\n        dangerouslySetInnerHTML={{ __html: post }}\r\n        style={{\r\n          padding: 30,\r\n          background: 'white',\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nContent.propTypes = {\r\n  post: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst JueJin = ({ jueJinPostLink, jueJinLikeIconLink }) => (\r\n  <a href={jueJinPostLink} rel=\"external nofollow noopener noreferrer\">\r\n    <img\r\n      src={jueJinLikeIconLink}\r\n      alt=\"JueJin Link\"\r\n      style={{\r\n        cursor: 'pointer',\r\n        height: '1.2rem',\r\n        marginBottom: '0.25rem',\r\n      }}\r\n    />\r\n  </a>\r\n);\r\n\r\nJueJin.propTypes = {\r\n  jueJinPostLink: PropTypes.string,\r\n  jueJinLikeIconLink: PropTypes.string,\r\n};\r\n\r\nJueJin.defaultProps = {\r\n  jueJinPostLink: '',\r\n  jueJinLikeIconLink: '',\r\n};\r\n\r\nexport default JueJin;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.scss';\r\n\r\nimport JueJin from '../JueJin';\r\n\r\nimport { parseImgur } from '../../api/images';\r\n\r\nconst Header = ({\r\n  img,\r\n  title,\r\n  subTitle,\r\n  authorImage,\r\n  authorName,\r\n  jueJinPostLink,\r\n  jueJinLikeIconLink,\r\n}) => (\r\n  <div className=\"col-12 header\" style={{ padding: 0 }} id=\"header\">\r\n    <div\r\n      className=\"img-container\"\r\n      style={{\r\n        backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) ), url(${img})`,\r\n        marginTop: -58,\r\n      }}\r\n    >\r\n      {title && <h1 className=\"u-title\">{title}</h1>}\r\n      {subTitle && (\r\n        <div className=\"u-subtitle\">\r\n          <div className=\"m-left\">\r\n            {authorImage && (\r\n              <img\r\n                src={parseImgur(authorImage, 'small-square')}\r\n                className=\"author-image\"\r\n                alt={authorName}\r\n              />\r\n            )}\r\n            <span className=\"author-name\">{authorName}</span>\r\n          </div>\r\n          <span className=\"text\">{subTitle}</span>\r\n          {jueJinPostLink &&\r\n            jueJinLikeIconLink && (\r\n              <JueJin\r\n                jueJinPostLink={jueJinPostLink}\r\n                jueJinLikeIconLink={jueJinLikeIconLink}\r\n              />\r\n            )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nHeader.propTypes = {\r\n  img: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  subTitle: PropTypes.string,\r\n  authorName: PropTypes.string,\r\n  authorImage: PropTypes.string,\r\n  jueJinPostLink: PropTypes.string,\r\n  jueJinLikeIconLink: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  authorName: '',\r\n  authorImage: '',\r\n  jueJinPostLink: '',\r\n  jueJinLikeIconLink: '',\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint react/prop-types: 0 */\r\n\r\n// Components\r\nimport React, { Component } from 'react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport 'gitalk/dist/gitalk.css';\r\n\r\nimport { parseChineseDate } from '../api';\r\n\r\nimport ExternalLink from '../components/ExternalLink';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Content from '../components/Content';\r\nimport SEO from '../components/SEO';\r\n\r\nimport Header from '../components/Header';\r\n// import TableOfContent from '../components/TableOfContent';\r\nimport ShareBox from '../components/ShareBox';\r\n\r\nimport { config } from '../../data';\r\n\r\n// Styles\r\nimport './blog-post.scss';\r\n\r\nconst { name, iconUrl, gitalk } = config;\r\n\r\nconst bgWhite = { padding: '10px 30px', background: 'white' };\r\n\r\n// Prevent webpack window problem\r\nconst isBrowser = typeof window !== 'undefined';\r\nconst Gitalk = isBrowser ? require('gitalk') : undefined;\r\n\r\nclass BlogPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.data = this.props.data;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { frontmatter, id: graphqlId } = this.data.content.edges[0].node;\r\n    const { title, id } = frontmatter;\r\n\r\n    // const GitTalkInstance = new Gitalk({\r\n    //   ...gitalk,\r\n    //   title,\r\n    //   id: id || graphqlId,\r\n    // });\r\n    // GitTalkInstance.render('gitalk-container');\r\n  }\r\n\r\n  render() {\r\n    const { node } = this.data.content.edges[0];\r\n\r\n    const {\r\n      html, frontmatter, fields, excerpt,\r\n    } = node;\r\n\r\n    const { slug } = fields;\r\n\r\n    const { date, headerImage, title } = frontmatter;\r\n\r\n    return (\r\n      <div className=\"row post order-2\">\r\n        <Header\r\n          img={headerImage || 'https://i.imgur.com/M795H8A.jpg'}\r\n          title={title}\r\n          authorName={name}\r\n          authorImage={iconUrl}\r\n          subTitle={parseChineseDate(date)}\r\n        />\r\n        <Sidebar />\r\n        <div className=\"col-xl-7 col-lg-6 col-md-12 col-sm-12 order-10 content\">\r\n          <Content post={html} />\r\n          <div className=\"m-message\" style={bgWhite}>\r\n            欢迎\r\n            <ExternalLink\r\n              href=\"https://github.com/MuRongJs/MuRongJs.github.io\"\r\n              title=\"关注和 Star 本博客\"\r\n            />\r\n            或者\r\n            <ExternalLink\r\n              href=\"https://github.com/MuRongJs\"\r\n              title=\"关注我的 Github\"\r\n            />\r\n            。\r\n          </div>\r\n\r\n          <div id=\"gitalk-container\" />\r\n        </div>\r\n\r\n        <ShareBox url={slug} />\r\n\r\n        <SEO\r\n          title={title}\r\n          url={slug}\r\n          siteTitleAlt=\"Calpa's Blog\"\r\n          isPost={false}\r\n          description={excerpt}\r\n          image={headerImage || 'https://i.imgur.com/M795H8A.jpg'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  fragment post on MarkdownRemark {\r\n    fields {\r\n      slug\r\n    }\r\n    frontmatter {\r\n      id\r\n      title\r\n      slug\r\n      date\r\n      headerImage\r\n    }\r\n  }\r\n\r\n  query BlogPostQuery($index: Int) {\r\n    content: allMarkdownRemark(\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n      skip: $index\r\n      limit: 1\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          html\r\n          excerpt\r\n          ...post\r\n        }\r\n\r\n        previous {\r\n          ...post\r\n        }\r\n\r\n        next {\r\n          ...post\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogPost;\r\n","import React from 'react';\r\n\r\nimport ExternalLink from '../../ExternalLink';\r\n\r\nimport { config } from '../../../../data';\r\n\r\nimport './index.scss';\r\n\r\nconst { friends = [] } = config;\r\n\r\nconst Friend = () => (\r\n  <div className=\"friend\">\r\n    <p>博客模版</p>\r\n    {friends.map(friend => (\r\n      <ExternalLink\r\n        href={friend.href}\r\n        title={friend.title}\r\n        key={friend.title}\r\n        rel=\"noopener\"\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nconst LatestPost = ({ posts }) => (\r\n  <div className=\"latest-post\">\r\n    <p>最新文章</p>\r\n    {posts.map(({ node }) => (\r\n      <Link\r\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n      >\r\n        {node.frontmatter.title}\r\n      </Link>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nLatestPost.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default LatestPost;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Friend from '../Friend';\r\nimport LatestPost from '../LatestPost';\r\nimport './index.scss';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Information = ({ totalCount, posts }) => (\r\n  <div className=\"d-none d-lg-block information my-2\">\r\n    <hr />\r\n    <p>\r\n      共&nbsp;\r\n      {totalCount}\r\n      &nbsp;篇文章\r\n    </p>\r\n    <hr />\r\n    <LatestPost posts={posts} />\r\n    <hr />\r\n    <Friend />\r\n  </div>\r\n);\r\n\r\nInformation.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n  posts: PropTypes.array,\r\n};\r\n\r\nInformation.defaultProps = {\r\n  posts: [],\r\n};\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport { Link, StaticQuery, graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { config } from '../../../data';\r\n\r\nimport Information from './Information';\r\n\r\nimport './index.scss';\r\n\r\nconst {\r\n  wordings = [],\r\n  githubUsername,\r\n  zhihuUsername,\r\n  email,\r\n  iconUrl,\r\n  about,\r\n} = config;\r\n\r\nconst Icon = ({ href, icon }) => (\r\n  <a\r\n    target=\"_blank\"\r\n    href={href}\r\n    rel=\"external nofollow noopener noreferrer\"\r\n    className=\"custom-icon\"\r\n  >\r\n    <span className=\"fa-layers fa-fw fa-2x\">\r\n      <FontAwesomeIcon icon={icon} />\r\n    </span>\r\n  </a>\r\n);\r\n\r\nconst Sidebar = ({ totalCount, latestPosts }) => (\r\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\r\n    <div className=\"about-me\">\r\n      <Link to={about} href={about} className=\"name\">\r\n        <img className=\"avatar\" src={iconUrl} alt=\"Calpa\" />\r\n        <h4>MuRong</h4>\r\n      </Link>\r\n      <p className=\"mb-1\">{wordings[0]}</p>\r\n      <p className=\"mb-3\">{wordings[1]}</p>\r\n      <Icon\r\n        href={`https://www.zhihu.com/people/${zhihuUsername}`}\r\n        icon={['fab', 'zhihu']}\r\n      />\r\n      <Icon\r\n        href={`https://github.com/${githubUsername}`}\r\n        icon={['fab', 'github']}\r\n      />\r\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\r\n      <Information totalCount={totalCount} posts={latestPosts} />\r\n    </div>\r\n  </header>\r\n);\r\n\r\nIcon.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nSidebar.propTypes = {\r\n  totalCount: PropTypes.number,\r\n  latestPosts: PropTypes.array, //eslint-disable-line\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  totalCount: 0,\r\n  latestPosts: [],\r\n};\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      fragment cardData on MarkdownRemark {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          id\r\n          title\r\n          url: slug\r\n          date\r\n          tags\r\n          description\r\n          headerImage\r\n        }\r\n      }\r\n\r\n      query SidebarQuery {\r\n        all: allMarkdownRemark {\r\n          totalCount\r\n        }\r\n\r\n        limited: allMarkdownRemark(\r\n          sort: { order: DESC, fields: frontmatter___date }\r\n          limit: 6\r\n        ) {\r\n          latestPosts: edges {\r\n            node {\r\n              ...cardData\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Sidebar {...data.all} {...data.limited} />}\r\n  />\r\n);\r\n","// s = Small Square (90×90)\r\n// b = Big Square (160×160)\r\n// t = Small Thumbnail (160×160)\r\n// m = Medium Thumbnail (320×320)\r\n// l = Large Thumbnail (640×640)\r\n// h = Huge Thumbnail (1024×1024)\r\nconst defaultPicture = 'M795H8A.jpg';\r\n\r\nconst parseImgur = (rawImage, size = 'large') => {\r\n  if (!rawImage) {\r\n    return `https://i.imgur.com/${defaultPicture}`;\r\n  }\r\n\r\n  const mapping = {\r\n    'small-square': 's',\r\n    'big-square': 'b',\r\n    small: 't',\r\n    medium: 'm',\r\n    large: 'l',\r\n    huge: 'h',\r\n  };\r\n\r\n  // Don't resize the png image\r\n  // as there is a transparent bug in imgur\r\n  if (rawImage.match('(png)|(gif)')) {\r\n    // Prevent double http url\r\n    if (rawImage.match('http')) {\r\n      return rawImage;\r\n    }\r\n    return `https://i.imgur.com/${rawImage}`;\r\n  }\r\n\r\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\r\n  // Prevent double http url\r\n  if (resizedImage.match('http')) {\r\n    return resizedImage;\r\n  }\r\n  return `https://i.imgur.com/${resizedImage}`;\r\n};\r\n\r\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\r\n\r\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\r\n  href,\r\n  'large',\r\n)} ${parseTitle(title, text)} />`;\r\n\r\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\r\n  href,\r\n  'huge',\r\n)}\">${parseImageTag({ href, title, text })}</a>`;\r\n\r\nmodule.exports = {\r\n  parseImgur,\r\n  parseImageTag,\r\n  getGalleryImage,\r\n};\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport config from '../../../data';\r\n\r\nconst schemaOrgJSONLD = ({\r\n  url,\r\n  title,\r\n  siteTitleAlt,\r\n  isPost,\r\n  image,\r\n  description,\r\n}) => [\r\n  {\r\n    '@context': 'http://schema.org',\r\n    '@type': 'WebSite',\r\n    url,\r\n    name: title,\r\n    alternateName: siteTitleAlt || '',\r\n  },\r\n  isPost\r\n    ? {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'BreadcrumbList',\r\n      itemListElement: [\r\n        {\r\n          '@type': 'ListItem',\r\n          position: 1,\r\n          item: {\r\n            '@id': url,\r\n            name: title,\r\n            image,\r\n          },\r\n        },\r\n      ],\r\n    }\r\n    : '',\r\n  isPost\r\n    ? {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'BlogPosting',\r\n      url,\r\n      name: title,\r\n      alternateName: siteTitleAlt || '',\r\n      headline: title,\r\n      image: {\r\n        '@type': 'ImageObject',\r\n        url: image,\r\n      },\r\n      description,\r\n    }\r\n    : '',\r\n];\r\n\r\nconst SEO = ({\r\n  url, title, description, image, siteTitleAlt, isPost,\r\n}) => (\r\n  <Helmet>\r\n    <title>{title}</title>\r\n\r\n    {/* General tags */}\r\n    <meta name=\"description\" content={description} />\r\n    <meta name=\"image\" content={image} />\r\n\r\n    {/* Schema.org tags */}\r\n    <script type=\"application/ld+json\">\r\n      {JSON.stringify(schemaOrgJSONLD(url, title, siteTitleAlt, isPost))}\r\n    </script>\r\n\r\n    {/* OpenGraph tags */}\r\n    <meta property=\"og:url\" content={url} />\r\n    {isPost ? (\r\n      <meta property=\"og:type\" content=\"article\" />\r\n    ) : (\r\n      <meta property=\"og:type\" content=\"website\" />\r\n    )}\r\n    <meta property=\"og:title\" content={title} />\r\n    <meta property=\"og:description\" content={description} />\r\n    <meta property=\"og:image\" content={image} />\r\n    <meta\r\n      property=\"fb:app_id\"\r\n      content={config.siteFBAppID ? config.siteFBAppID : ''}\r\n    />\r\n\r\n    {/* Twitter Card tags */}\r\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n    <meta\r\n      name=\"twitter:creator\"\r\n      content={config.twitter_username ? config.twitter_username : ''}\r\n    />\r\n    <meta name=\"twitter:title\" content={title} />\r\n    <meta name=\"twitter:description\" content={description} />\r\n    <meta name=\"twitter:image\" content={image} />\r\n  </Helmet>\r\n);\r\n\r\nSEO.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  siteTitleAlt: PropTypes.string.isRequired,\r\n  isPost: PropTypes.bool.isRequired,\r\n};\r\n\r\nSEO.defaultProps = {\r\n  title: config.title,\r\n};\r\n\r\nexport default SEO;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ReactGA from 'react-ga';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './index.scss';\r\n\r\nconst CommentButton = () => (\r\n  <a\r\n    className=\"share-button\"\r\n    style={{\r\n      lineHeight: '1.7rem',\r\n      color: '#337ab7',\r\n      paddingLeft: '0.15rem',\r\n    }}\r\n    href=\"#gitalk-container\"\r\n    onClick={() =>\r\n      ReactGA.event({\r\n        category: 'User',\r\n        action: 'Goto Comment Box',\r\n      })\r\n    }\r\n  >\r\n    <FontAwesomeIcon icon={['far', 'comment']} />\r\n  </a>\r\n);\r\n\r\nconst ShareBox = ({ url, hasCommentBox }) => (\r\n  <div className=\"m-share-box\">\r\n    {/* <a\r\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\r\n      title=\"\"\r\n      className=\"share-button\"\r\n      onClick={() =>\r\n        ReactGA.event({\r\n          category: 'Share',\r\n          action: 'Facebook Share',\r\n        })\r\n      }\r\n    >\r\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\r\n    </a> */}\r\n\r\n    {/* 視覺置中 => 稍微往上偏移 */}\r\n    {/* {hasCommentBox && <CommentButton />} */}\r\n\r\n    <a\r\n      className=\"share-button\"\r\n      href=\"#header\"\r\n      onClick={() => {\r\n        ReactGA.event({\r\n          category: 'User',\r\n          action: 'Scroll to Top',\r\n        });\r\n      }}\r\n      style={{\r\n        lineHeight: '1.7rem',\r\n        paddingLeft: '0.1rem',\r\n      }}\r\n    >\r\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nShareBox.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  hasCommentBox: PropTypes.bool,\r\n};\r\n\r\nShareBox.defaultProps = {\r\n  hasCommentBox: true,\r\n};\r\n\r\nexport default ShareBox;\r\n"],"sourceRoot":""}