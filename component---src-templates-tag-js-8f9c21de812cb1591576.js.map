{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/api/images.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Card/index.js"],"names":["TagPage","_ref","data","pageContext","edges","allMarkdownRemark","tag","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","margin","_components_Sidebar__WEBPACK_IMPORTED_MODULE_4__","fontSize","length","map","_ref2","node","_components_Card__WEBPACK_IMPORTED_MODULE_2__","Object","assign","frontmatter","key","id","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","title","url","siteTitleAlt","isPost","description","image","pageQuery","config","friends","Friend","_react_16_8_6_react_default","friend","ExternalLink","href","rel","LatestPost","posts","gatsby_browser_entry","to","slug","fields","propTypes","PropTypes","arrayOf","object","isRequired","Information","totalCount","components_Sidebar_LatestPost","components_Sidebar_Friend","number","array","defaultProps","wordings","githubUsername","zhihuUsername","email","iconUrl","about","Icon","icon","target","index_es","Sidebar","latestPosts","src","alt","Sidebar_Icon","components_Sidebar_Information","string","__webpack_exports__","query","render","Sidebar_Sidebar","all","limited","_1307080370","Tag","name","count","oneOfType","parseImgur","rawImage","size","match","resizedImage","replace","small-square","big-square","small","medium","large","huge","parseImageTag","text","parseTitle","module","exports","getGalleryImage","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_data__WEBPACK_IMPORTED_MODULE_3__","_data__WEBPACK_IMPORTED_MODULE_3___default","SEO","content","type","JSON","stringify","@context","@type","alternateName","itemListElement","position","item","@id","headline","schemaOrgJSONLD","property","siteFBAppID","twitter_username","bool","CardHeader","headerImage","color","backgroundColor","gatsby__WEBPACK_IMPORTED_MODULE_2__","backgroundImage","Card","date","headerBackgroundColor","_ref2$tags","tags","split","_Tag__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"component---src-templates-tag-js-8f9c21de812cb1591576.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Card from '../components/Card';\r\nimport SEO from '../components/SEO';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst TagPage = ({ data, pageContext }) => {\r\n  const { edges } = data.allMarkdownRemark;\r\n  const { tag } = pageContext;\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          margin: 15,\r\n        }}\r\n      >\r\n        <Sidebar />\r\n\r\n        <div className=\"col-xl-10 col-lg-7 col-md-12 col-xs-12 order-2\">\r\n          <div\r\n            className=\"col-12\"\r\n            style={{\r\n              fontSize: 20,\r\n              margin: 15,\r\n            }}\r\n          >\r\n            {edges.length}\r\n            &nbsp;Articles in&nbsp;\r\n            {tag}\r\n          </div>\r\n          {edges.map(({ node }) => (\r\n            <Card {...node.frontmatter} key={node.id} />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\r\n      </div>\r\n\r\n      <SEO\r\n        title={tag}\r\n        url={`/tag/${tag}`}\r\n        siteTitleAlt=\"Calpa's Blog\"\r\n        isPost={false}\r\n        description={tag}\r\n        image=\"https://i.imgur.com/M795H8A.jpg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query tagQuery($tag: [String!]) {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n      filter: { frontmatter: { tags: { in: $tag } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            id\r\n            url: slug\r\n            title\r\n            date\r\n            tags\r\n            headerImage\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport ExternalLink from '../../ExternalLink';\r\n\r\nimport { config } from '../../../../data';\r\n\r\nimport './index.scss';\r\n\r\nconst { friends = [] } = config;\r\n\r\nconst Friend = () => (\r\n  <div className=\"friend\">\r\n    <p>博客模版</p>\r\n    {friends.map(friend => (\r\n      <ExternalLink\r\n        href={friend.href}\r\n        title={friend.title}\r\n        key={friend.title}\r\n        rel=\"noopener\"\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nconst LatestPost = ({ posts }) => (\r\n  <div className=\"latest-post\">\r\n    <p>最新文章</p>\r\n    {posts.map(({ node }) => (\r\n      <Link\r\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n      >\r\n        {node.frontmatter.title}\r\n      </Link>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nLatestPost.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default LatestPost;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Friend from '../Friend';\r\nimport LatestPost from '../LatestPost';\r\nimport './index.scss';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Information = ({ totalCount, posts }) => (\r\n  <div className=\"d-none d-lg-block information my-2\">\r\n    <hr />\r\n    <p>\r\n      共&nbsp;\r\n      {totalCount}\r\n      &nbsp;篇文章\r\n    </p>\r\n    <hr />\r\n    <LatestPost posts={posts} />\r\n    <hr />\r\n    <Friend />\r\n  </div>\r\n);\r\n\r\nInformation.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n  posts: PropTypes.array,\r\n};\r\n\r\nInformation.defaultProps = {\r\n  posts: [],\r\n};\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport { Link, StaticQuery, graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { config } from '../../../data';\r\n\r\nimport Information from './Information';\r\n\r\nimport './index.scss';\r\n\r\nconst {\r\n  wordings = [],\r\n  githubUsername,\r\n  zhihuUsername,\r\n  email,\r\n  iconUrl,\r\n  about,\r\n} = config;\r\n\r\nconst Icon = ({ href, icon }) => (\r\n  <a\r\n    target=\"_blank\"\r\n    href={href}\r\n    rel=\"external nofollow noopener noreferrer\"\r\n    className=\"custom-icon\"\r\n  >\r\n    <span className=\"fa-layers fa-fw fa-2x\">\r\n      <FontAwesomeIcon icon={icon} />\r\n    </span>\r\n  </a>\r\n);\r\n\r\nconst Sidebar = ({ totalCount, latestPosts }) => (\r\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\r\n    <div className=\"about-me\">\r\n      <Link to={about} href={about} className=\"name\">\r\n        <img className=\"avatar\" src={iconUrl} alt=\"Calpa\" />\r\n        <h4>MuRong</h4>\r\n      </Link>\r\n      <p className=\"mb-1\">{wordings[0]}</p>\r\n      <p className=\"mb-3\">{wordings[1]}</p>\r\n      <Icon\r\n        href={`https://www.zhihu.com/people/${zhihuUsername}`}\r\n        icon={['fab', 'zhihu']}\r\n      />\r\n      <Icon\r\n        href={`https://github.com/${githubUsername}`}\r\n        icon={['fab', 'github']}\r\n      />\r\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\r\n      <Information totalCount={totalCount} posts={latestPosts} />\r\n    </div>\r\n  </header>\r\n);\r\n\r\nIcon.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nSidebar.propTypes = {\r\n  totalCount: PropTypes.number,\r\n  latestPosts: PropTypes.array, //eslint-disable-line\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  totalCount: 0,\r\n  latestPosts: [],\r\n};\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      fragment cardData on MarkdownRemark {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          id\r\n          title\r\n          url: slug\r\n          date\r\n          tags\r\n          description\r\n          headerImage\r\n        }\r\n      }\r\n\r\n      query SidebarQuery {\r\n        all: allMarkdownRemark {\r\n          totalCount\r\n        }\r\n\r\n        limited: allMarkdownRemark(\r\n          sort: { order: DESC, fields: frontmatter___date }\r\n          limit: 6\r\n        ) {\r\n          latestPosts: edges {\r\n            node {\r\n              ...cardData\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Sidebar {...data.all} {...data.limited} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Tag = ({ name, count }) => (\r\n  <a href={`/tag/${name}`} className=\"header-tag\">\r\n    {name}\r\n    &nbsp;\r\n    {count}\r\n  </a>\r\n);\r\n\r\nTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nTag.defaultProps = {\r\n  count: '',\r\n};\r\n\r\nexport default Tag;\r\n","// s = Small Square (90×90)\r\n// b = Big Square (160×160)\r\n// t = Small Thumbnail (160×160)\r\n// m = Medium Thumbnail (320×320)\r\n// l = Large Thumbnail (640×640)\r\n// h = Huge Thumbnail (1024×1024)\r\nconst defaultPicture = 'M795H8A.jpg';\r\n\r\nconst parseImgur = (rawImage, size = 'large') => {\r\n  if (!rawImage) {\r\n    return `https://i.imgur.com/${defaultPicture}`;\r\n  }\r\n\r\n  const mapping = {\r\n    'small-square': 's',\r\n    'big-square': 'b',\r\n    small: 't',\r\n    medium: 'm',\r\n    large: 'l',\r\n    huge: 'h',\r\n  };\r\n\r\n  // Don't resize the png image\r\n  // as there is a transparent bug in imgur\r\n  if (rawImage.match('(png)|(gif)')) {\r\n    // Prevent double http url\r\n    if (rawImage.match('http')) {\r\n      return rawImage;\r\n    }\r\n    return `https://i.imgur.com/${rawImage}`;\r\n  }\r\n\r\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\r\n  // Prevent double http url\r\n  if (resizedImage.match('http')) {\r\n    return resizedImage;\r\n  }\r\n  return `https://i.imgur.com/${resizedImage}`;\r\n};\r\n\r\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\r\n\r\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\r\n  href,\r\n  'large',\r\n)} ${parseTitle(title, text)} />`;\r\n\r\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\r\n  href,\r\n  'huge',\r\n)}\">${parseImageTag({ href, title, text })}</a>`;\r\n\r\nmodule.exports = {\r\n  parseImgur,\r\n  parseImageTag,\r\n  getGalleryImage,\r\n};\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport config from '../../../data';\r\n\r\nconst schemaOrgJSONLD = ({\r\n  url,\r\n  title,\r\n  siteTitleAlt,\r\n  isPost,\r\n  image,\r\n  description,\r\n}) => [\r\n  {\r\n    '@context': 'http://schema.org',\r\n    '@type': 'WebSite',\r\n    url,\r\n    name: title,\r\n    alternateName: siteTitleAlt || '',\r\n  },\r\n  isPost\r\n    ? {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'BreadcrumbList',\r\n      itemListElement: [\r\n        {\r\n          '@type': 'ListItem',\r\n          position: 1,\r\n          item: {\r\n            '@id': url,\r\n            name: title,\r\n            image,\r\n          },\r\n        },\r\n      ],\r\n    }\r\n    : '',\r\n  isPost\r\n    ? {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'BlogPosting',\r\n      url,\r\n      name: title,\r\n      alternateName: siteTitleAlt || '',\r\n      headline: title,\r\n      image: {\r\n        '@type': 'ImageObject',\r\n        url: image,\r\n      },\r\n      description,\r\n    }\r\n    : '',\r\n];\r\n\r\nconst SEO = ({\r\n  url, title, description, image, siteTitleAlt, isPost,\r\n}) => (\r\n  <Helmet>\r\n    <title>{title}</title>\r\n\r\n    {/* General tags */}\r\n    <meta name=\"description\" content={description} />\r\n    <meta name=\"image\" content={image} />\r\n\r\n    {/* Schema.org tags */}\r\n    <script type=\"application/ld+json\">\r\n      {JSON.stringify(schemaOrgJSONLD(url, title, siteTitleAlt, isPost))}\r\n    </script>\r\n\r\n    {/* OpenGraph tags */}\r\n    <meta property=\"og:url\" content={url} />\r\n    {isPost ? (\r\n      <meta property=\"og:type\" content=\"article\" />\r\n    ) : (\r\n      <meta property=\"og:type\" content=\"website\" />\r\n    )}\r\n    <meta property=\"og:title\" content={title} />\r\n    <meta property=\"og:description\" content={description} />\r\n    <meta property=\"og:image\" content={image} />\r\n    <meta\r\n      property=\"fb:app_id\"\r\n      content={config.siteFBAppID ? config.siteFBAppID : ''}\r\n    />\r\n\r\n    {/* Twitter Card tags */}\r\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n    <meta\r\n      name=\"twitter:creator\"\r\n      content={config.twitter_username ? config.twitter_username : ''}\r\n    />\r\n    <meta name=\"twitter:title\" content={title} />\r\n    <meta name=\"twitter:description\" content={description} />\r\n    <meta name=\"twitter:image\" content={image} />\r\n  </Helmet>\r\n);\r\n\r\nSEO.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  siteTitleAlt: PropTypes.string.isRequired,\r\n  isPost: PropTypes.bool.isRequired,\r\n};\r\n\r\nSEO.defaultProps = {\r\n  title: config.title,\r\n};\r\n\r\nexport default SEO;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Tag from '../Tag';\r\n\r\nimport { parseImgur } from '../../api/images';\r\n\r\nimport './index.scss';\r\n\r\nconst imageStyle = (headerImage, color) => ({\r\n  backgroundColor: `#${color}`,\r\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\r\n});\r\n\r\nconst CardHeader = ({ url, image, backgroundColor }) => (\r\n  <Link to={url} href={url}>\r\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)} />\r\n  </Link>\r\n);\r\n\r\nconst Card = ({\r\n  title,\r\n  date,\r\n  url,\r\n  headerImage,\r\n  headerBackgroundColor,\r\n  description,\r\n  tags = [],\r\n}) => (\r\n  <div className=\"col-sm-12 pb-4\">\r\n    <div className=\"custom-card\">\r\n      {headerImage && (\r\n        <CardHeader\r\n          url={url}\r\n          image={headerImage}\r\n          backgroundColor={headerBackgroundColor}\r\n        />\r\n      )}\r\n      <div className=\"data\">\r\n        <div className=\"content\">\r\n          <div className=\"stats\">\r\n            <span className=\"date\">{date.split('T')[0]}</span>\r\n            {tags.map(name => (\r\n              <Tag name={name} key={name} />\r\n            ))}\r\n          </div>\r\n          <Link to={url} href={url}>\r\n            <h4 className=\"title\">{title}</h4>\r\n          </Link>\r\n          <p>{description}</p>\r\n          <Link to={url} href={url}>\r\n            ....阅读全文內容\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  url: PropTypes.string.isRequired,\r\n  headerImage: PropTypes.string,\r\n  headerBackgroundColor: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nCardHeader.propTypes = Card.propTypes;\r\n\r\nCard.defaultProps = {\r\n  headerImage: '',\r\n  tags: [],\r\n  date: '',\r\n  headerBackgroundColor: '',\r\n};\r\n\r\nexport default Card;\r\n"],"sourceRoot":""}